services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    networks:
      - app-network
    depends_on:
      - db
    environment:
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: tasker
      MODE: "d"
      POSTGRES_CONN_STR: postgres://postgres:postgres@db:5432/tasker?sslmode=disable
      SECRET_KEY: 79fa9a4ba8daf195c69f5daf5bb4a4e8a1241383c01ed12fa183400302a42829

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    volumes:
      # - ./frontend:/app
      - /app/node_modules
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app
          ignore:
            - node_modules/
        - action: rebuild
          path: package.json
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      - backend
    environment:
      BACKEND_URL: http://backend:8000
    profiles:
      - frontend

  db:
    image: postgres:17
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: tasker
    ports:
      - "5432:5432"
    networks:
      - app-network
    volumes:
      - postgres-data:/var/lib/postgresql/data

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"
    networks:
      - app-network
    profiles:
      - debug

volumes:
  postgres-data:

networks:
  app-network:
    driver: bridge
